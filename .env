# NOTE: These environment variables are used in "docker-compose.yml".

# You can generate a random key for these variables in: https://randomkeygen.com/
SECRET_KEY = 
SESSION_SECRET = 

# GITHUB_CLIENT_ID: Unique identifier provided by GitHub for OAuth integration.
# GITHUB_CLIENT_SECRET: Secret key provided by GitHub for OAuth integration.
# https://docs.github.com/en/apps/oauth-apps/building-oauth-apps/authenticating-to-the-rest-api-with-an-oauth-app#registering-your-app
GITHUB_CLIENT_ID = 
GITHUB_CLIENT_SECRET = 

# Credentials that will be used to authenticate with MongoDB.
MONGO_INITDB_ROOT_USERNAME = root
MONGO_INITDB_ROOT_PASSWORD = changeme

# OPTIONAL: If you have an SMTP server, complete these variables. 
# It will serve so that, in case of errors at runtime, you will be notified (WEBMASTER_EMAIL).
SMTP_HOST =
SMTP_PORT =
SMTP_AUTH_USER =
SMTP_AUTH_PASSWORD =
WEBMASTER_MAIL =

# DOMAIN: Specifies the base domain of the server. This is the 
# main access point for the application.
DOMAIN = http://quantum-server.yourdomain.com

# CLIENT_HOST: Specifies the host of the application's 
# client. It's the access point for the user interface.
CLIENT_HOST = http://quantum.yourdomain.com

# REGISTRATION_DISABLED: The value of the variable will indicate 
# whether third parties can create accounts within the platform, that 
# is, through the client application (webui) or through the API 
# provided by the server. By default this option is "true" indicating 
# that accounts cannot be created, so the system administrator creates 
# their account as "admin" from the CLI provided.
REGISTRATION_DISABLED = false

# ...other variables that you can modify for the deployment of the 
# application in docker, you should not worry about this, since they
# have values ​​assigned by default (in docker-compose.yml).

# NODE_ENV: Defines the server execution environment. 
#
# NODE_ENV = production

# DOCKERS_CONTAINER_ALIASES: The content of the variable will indicate 
# the value that will be concatenated at the beginning of each container 
# name that is created for a specific user. Changing this value after 
# having already deployed and having your database with users can cause problems. 
# This value is the way to determine which container belongs to Quantum.
#
# DOCKERS_CONTAINER_ALIASES = Quantum-Container

# DOCKERS_NETWORK_ALIASES = Quantum-Network

# DOCKER_APK_STARTER_PACKAGES: Initial packages to install once
# the user container is created.
#
# DOCKER_APK_STARTER_PACKAGES = "git nodejs npm python3 py3-pip"

# JWT_EXPIRATION_DAYS: Specifies the validity duration 
# of JWT tokens issued for user authentication.
#
# JWT_EXPIRATION_DAYS = 7d

# CORS_ORIGIN: Defines allowed origins for 
# cross-origin resource sharing (CORS) requests. In 
# this case, it allows from any origin.
#
# CORS_ORIGIN = *

# LOG_LEVEL: debug | error | info | warn
#
# LOG_LEVEL = info

# PRODUCTION_DATABASE: Specifies the production 
# database the application will connect to.
#
# PRODUCTION_DATABASE = quantumcloud@production

# DEVELOPMENT_DATABASE: Specifies the development 
# database the application will connect to.
#
# DEVELOPMENT_DATABASE = quantumcloud@development

# LOG_PATH_MAX_SIZE: The maximum size of the log 
# file before rotation occurs. (KYLOBYTES)
#
# LOG_PATH_MAX_SIZE = 250

# MONGO_URI: MongoDB connection URI 
# used by the application.
#
# MONGO_URI = mongodb://user:password@hostname:port

# MONGO_AUTH_SOURCE: Specifies the database to authenticate against.
# Use this if your authentication credentials are stored in a different database
# than the one you're connecting to. Commonly, this is set to "admin".
#
# MONGO_AUTH_SOURCE = admin
